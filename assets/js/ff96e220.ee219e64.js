"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[84],{4137:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(o,".").concat(c)]||u[c]||s[c]||l;return n?a.createElement(k,i(i({ref:t},m),{},{components:n})):a.createElement(k,i({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d[u]="string"==typeof e?e:r,i[1]=d;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4116:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),l=(n(7294),n(4137)),i=["components"],d={title:"Current Weather API",sidebar_label:"Current Weather"},o=void 0,p={unversionedId:"apis/current-weather",id:"apis/current-weather",title:"Current Weather API",description:"This API allows you to retrieve the current weather data.",source:"@site/docs/apis/current-weather.md",sourceDirName:"apis",slug:"/apis/current-weather",permalink:"/OpenWeatherMap-PHP-API/docs/apis/current-weather",draft:!1,editUrl:"https://github.com/cmfcmf/OpenWeatherMap-PHP-API/edit/master/docs/docs/apis/current-weather.md",tags:[],version:"current",lastUpdatedBy:"Christian Flach",lastUpdatedAt:1580329038,formattedLastUpdatedAt:"Jan 29, 2020",frontMatter:{title:"Current Weather API",sidebar_label:"Current Weather"},sidebar:"someSidebar",previous:{title:"Usage",permalink:"/OpenWeatherMap-PHP-API/docs/usage"},next:{title:"Weather Forecast",permalink:"/OpenWeatherMap-PHP-API/docs/apis/weather-forecast"}},m={},u=[{value:"<code>$query</code> parameter",id:"query-parameter",level:2},{value:"by city name",id:"by-city-name",level:3},{value:"by city id",id:"by-city-id",level:3},{value:"by zip code",id:"by-zip-code",level:3},{value:"by coordinates",id:"by-coordinates",level:3},{value:"<code>$weather</code> object",id:"weather-object",level:2},{value:"Retrieving raw data",id:"retrieving-raw-data",level:2},{value:"HTML",id:"html",level:3},{value:"JSON",id:"json",level:3},{value:"XML",id:"xml",level:3}],s={toc:u},c="wrapper";function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This API allows you to retrieve the current weather data."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://openweathermap.org/current"},"Corresponding OpenWeatherMap Documentation"))),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"$owm->getWeather()")," method takes the following parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$query")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mixed")),(0,l.kt)("td",{parentName:"tr",align:null},"--"),(0,l.kt)("td",{parentName:"tr",align:null},"See below")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$units")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"imperial"'),"|",(0,l.kt)("inlineCode",{parentName:"td"},'"metric"')),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"imperial"')),(0,l.kt)("td",{parentName:"tr",align:null},"Units to use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$lang")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"en")),(0,l.kt)("td",{parentName:"tr",align:null},"One of the languages listed at the very bottom of ",(0,l.kt)("a",{parentName:"td",href:"https://openweathermap.org/current#multi"},"the official documentation"))))),(0,l.kt)("h2",{id:"query-parameter"},(0,l.kt)("inlineCode",{parentName:"h2"},"$query")," parameter"),(0,l.kt)("p",null,"The first parameter determines the location to get weather data from.\nSeveral possible approaches are possible:"),(0,l.kt)("h3",{id:"by-city-name"},"by city name"),(0,l.kt)("p",null,"Specifying the country is optional."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$weather = $owm->getWeather('Berlin,DE', $units, $lang);\n")),(0,l.kt)("h3",{id:"by-city-id"},"by city id"),(0,l.kt)("p",null,"One city id:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$weather = $owm->getWeather(2172797, $units, $lang);\n")),(0,l.kt)("p",null,"Multiple city ids"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"// WARNING: This uses a different method (getWeatherGroup) compared\n// to the other query formats (getWeather)!\n$weathers = $owm->getWeatherGroup([2172797, 2172798], $units, $lang);\nforeach ($weathers as $weather) {\n  // Do something\n}\n")),(0,l.kt)("h3",{id:"by-zip-code"},"by zip code"),(0,l.kt)("p",null,"Specifying the country is optional."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"// Hyderabad, India\n$weather = $owm->getWeather('zip:500001,IN', $units, $lang);\n")),(0,l.kt)("h3",{id:"by-coordinates"},"by coordinates"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$weather = $owm->getWeather(['lat' => 77.73038, 'lon' => 41.89604],\n                            $units, $lang);\n")),(0,l.kt)("h2",{id:"weather-object"},(0,l.kt)("inlineCode",{parentName:"h2"},"$weather")," object"),(0,l.kt)("p",null,"The returned object is an instance of ",(0,l.kt)("inlineCode",{parentName:"p"},"Cmfcmf\\OpenWeatherMap\\CurrentWeather"),".\nIt provides the following data:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"lastUpdate")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"\\\u1e10ateTimeInterface")),(0,l.kt)("td",{parentName:"tr",align:null},"When the data was last updated")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"temperature->now")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Note: This should be named ",(0,l.kt)("inlineCode",{parentName:"td"},"temperature->avg")," and is only named ",(0,l.kt)("inlineCode",{parentName:"td"},"temperature->now")," for backwards compatibility! Returns the average current temperature for the given location (i.e, a big city might have multiple temperature measurement stations)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"temperature->min")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Minimum current temperature for the given locaiton")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"temperature->max")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum current temperature for the given locaiton")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"pressure")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Air pressure")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"humidity")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Humidity")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sun->rise")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"\\DateTimeInterface")),(0,l.kt)("td",{parentName:"tr",align:null},"Time of sunrise")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sun->set")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"\\DateTimeInterface")),(0,l.kt)("td",{parentName:"tr",align:null},"Time of sunset")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wind->speed")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Wind speed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wind->direction")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Wind direction")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"clouds")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Cloudiness in percent")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"precipitation")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Unit")),(0,l.kt)("td",{parentName:"tr",align:null},"Recent precipitation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"weather->id")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"Current weather phenomenon id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"weather->description")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Current weather description")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"weather->icon")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Current weather icon name. Use ",(0,l.kt)("inlineCode",{parentName:"td"},"weather->getIconUrl()")," to get the url to an icon from OpenWeatherMap")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"city->id")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"int")),(0,l.kt)("td",{parentName:"tr",align:null},"Internal city id")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"city->name")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the city")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"city->country")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"City country code")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"city->timezone")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"\\DateTimeZone"),"|",(0,l.kt)("inlineCode",{parentName:"td"},"null")),(0,l.kt)("td",{parentName:"tr",align:null},"City timezone")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"city->lon")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"float")),(0,l.kt)("td",{parentName:"tr",align:null},"City longitude")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"city->lat")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"float")),(0,l.kt)("td",{parentName:"tr",align:null},"City latitude")))),(0,l.kt)("h2",{id:"retrieving-raw-data"},"Retrieving raw data"),(0,l.kt)("h3",{id:"html"},"HTML"),(0,l.kt)("p",null,"You can also request the data as an HTML page:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$html = $owm->getRawWeatherData('Berlin', $units, $lang, null, 'html');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="utf-8">\n  <meta name="keywords" content="weather, world, openweathermap, weather, layer" />\n  <meta name="description" content="A layer with current weather conditions in cities for world wide" />\n  <meta name="domain" content="openweathermap.org" />\n  <meta http-equiv="pragma" content="no-cache" />\n  <meta http-equiv="Expires" content="-1" />\n</head>\n<body>\n  <div style="font-size: medium; font-weight: bold; margin-bottom: 0px;">Berlin</div>\n  <div style="float: left; width: 130px;">\n    <div style="display: block; clear: left;">\n      <div style="float: left;" title="Titel">\n        <img height="45" width="45" style="border: medium none; width: 45px; height: 45px; background: url(&quot;http://openweathermap.org/img/w/04d.png&quot;) repeat scroll 0% 0% transparent;" alt="title" src="http://openweathermap.org/images/transparent.png"/>\n      </div>\n      <div style="float: left;">\n        <div style="display: block; clear: left; font-size: medium; font-weight: bold; padding: 0pt 3pt;" title="Current Temperature">12.73\xb0C</div>\n        <div style="display: block; width: 85px; overflow: visible;"></div>\n      </div>\n    </div>\n    <div style="display: block; clear: left; font-size: small;">Clouds: 89%</div>\n    <div style="display: block; clear: left; color: gray; font-size: x-small;" >Humidity: 62%</div>\n    <div style="display: block; clear: left; color: gray; font-size: x-small;" >Wind: 6.2 m/s</div>\n    <div style="display: block; clear: left; color: gray; font-size: x-small;" >Pressure: 1014hpa</div>\n  </div>\n  <div style="display: block; clear: left; color: gray; font-size: x-small;">\n    <a href="http://openweathermap.org/city/2950159?utm_source=openweathermap&utm_medium=widget&utm_campaign=html_old" target="_blank">More..</a>\n  </div>\n  <script>(function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,\'script\',\'//www.google-analytics.com/analytics.js\',\'ga\');ga(\'create\', \'UA-31601618-9\', \'auto\');ga(\'send\', \'pageview\');<\/script>\n</body>\n</html>\n')),(0,l.kt)("h3",{id:"json"},"JSON"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$json = $owm->getRawWeatherData('Berlin', 'metric', 'de', null, 'json');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "coord":{"lon":13.41,"lat":52.52},\n  "weather":[{"id":804,"main":"Clouds","description":"Bedeckt","icon":"04d"}],\n  "base":"stations",\n  "main":{"temp":12.73,"feels_like":7.4,"temp_min":11.67,\n          "temp_max":13.89,"pressure":1014,"humidity":62},\n  "visibility":10000,\n  "wind":{"speed":6.2,"deg":200},\n  "clouds":{"all":89},\n  "dt":1579089181,\n  "sys":{"type":1,"id":1275,"country":"DE","sunrise":1579072219,"sunset":1579101619},\n  "timezone":3600,\n  "id":2950159,\n  "name":"Berlin",\n  "cod":200\n}\n')),(0,l.kt)("h3",{id:"xml"},"XML"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"$xml = $owm->getRawWeatherData('Berlin', 'metric', 'de', null, 'xml');\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<current><city id="2950159" name="Berlin"><coord lon="13.41" lat="52.52"></coord><country>DE</country><timezone>3600</timezone><sun rise="2020-01-15T07:10:19" set="2020-01-15T15:20:19"></sun></city><temperature value="12.73" min="11.67" max="13.89" unit="celsius"></temperature><feels_like value="7.4" unit="celsius"></feels_like><humidity value="62" unit="%"></humidity><pressure value="1014" unit="hPa"></pressure><wind><speed value="6.2" unit="m/s" name="Moderate breeze"></speed><gusts></gusts><direction value="200" code="SSW" name="South-southwest"></direction></wind><clouds value="89" name="Bedeckt"></clouds><visibility value="10000"></visibility><precipitation mode="no"></precipitation><weather number="804" value="Bedeckt" icon="04d"></weather><lastupdate value="2020-01-15T11:53:01"></lastupdate></current>\n')))}k.isMDXComponent=!0}}]);